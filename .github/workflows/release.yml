name: create release and upload binary

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: get version
      id: v
      run: echo ::set-output name=t::$( awk -F '/' '{print $NF}' <<< "${GITHUB_REF}" )

    - name: create release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.v.outputs.t }}
        release_name: ${{ steps.v.outputs.t }}
        draft: false
        prerelease: false

  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: ["ubuntu-latest", "macos-latest"]

    steps:
    - name: install go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x

    - name: checkout
      uses: actions/checkout@v1

    - name: build
      run: |
        go build -v -o zookeeper-exporter
        tar czvf zookeeper-exporter-${{ job.release.steps.v.outputs.t }}-${{ runner.os }}.tar.gz zookeeper-exporter

    - name: upload release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ job.release.steps.create-release.outputs.upload_url }}
        asset_path: zookeeper-exporter-${{ job.release.steps.v.outputs.t }}-${{ runner.os }}.tar.gz
        asset_name: zookeeper-exporter-${{ job.release.steps.v.outputs.t }}-${{ runner.os }}.tar.gz
        asset_content_type: application/gzip
